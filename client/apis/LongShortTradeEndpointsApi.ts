/* tslint:disable */
/* eslint-disable */
/**
 * Exchanger Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LongShortTradeRequest,
} from '../models/index';
import {
    LongShortTradeRequestFromJSON,
    LongShortTradeRequestToJSON,
} from '../models/index';

export interface LongShortMarketTradeRequest {
    longShortTradeRequest: LongShortTradeRequest;
}

export interface LongShortTradeOperationRequest {
    longShortTradeRequest: LongShortTradeRequest;
}

/**
 * 
 */
export class LongShortTradeEndpointsApi extends runtime.BaseAPI {

    /**
     */
    async longShortMarketTradeRaw(requestParameters: LongShortMarketTradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['longShortTradeRequest'] == null) {
            throw new runtime.RequiredError(
                'longShortTradeRequest',
                'Required parameter "longShortTradeRequest" was null or undefined when calling longShortMarketTrade().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/long-short-market`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LongShortTradeRequestToJSON(requestParameters['longShortTradeRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async longShortMarketTrade(requestParameters: LongShortMarketTradeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.longShortMarketTradeRaw(requestParameters, initOverrides);
    }

    /**
     */
    async longShortTradeRaw(requestParameters: LongShortTradeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['longShortTradeRequest'] == null) {
            throw new runtime.RequiredError(
                'longShortTradeRequest',
                'Required parameter "longShortTradeRequest" was null or undefined when calling longShortTrade().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/long-short-limit`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LongShortTradeRequestToJSON(requestParameters['longShortTradeRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async longShortTrade(requestParameters: LongShortTradeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.longShortTradeRaw(requestParameters, initOverrides);
    }

}
