/* tslint:disable */
/* eslint-disable */
/**
 * Exchanger Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NetworkType } from './NetworkType';
import {
    NetworkTypeFromJSON,
    NetworkTypeFromJSONTyped,
    NetworkTypeToJSON,
} from './NetworkType';

/**
 * 
 * @export
 * @interface SyncAddressRequest
 */
export interface SyncAddressRequest {
    /**
     * 
     * @type {number}
     * @memberof SyncAddressRequest
     */
    accountId?: number;
    /**
     * 
     * @type {string}
     * @memberof SyncAddressRequest
     */
    asset?: string;
    /**
     * 
     * @type {NetworkType}
     * @memberof SyncAddressRequest
     */
    network?: NetworkType;
}

/**
 * Check if a given object implements the SyncAddressRequest interface.
 */
export function instanceOfSyncAddressRequest(value: object): boolean {
    return true;
}

export function SyncAddressRequestFromJSON(json: any): SyncAddressRequest {
    return SyncAddressRequestFromJSONTyped(json, false);
}

export function SyncAddressRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SyncAddressRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'accountId': json['accountId'] == null ? undefined : json['accountId'],
        'asset': json['asset'] == null ? undefined : json['asset'],
        'network': json['network'] == null ? undefined : NetworkTypeFromJSON(json['network']),
    };
}

export function SyncAddressRequestToJSON(value?: SyncAddressRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountId': value['accountId'],
        'asset': value['asset'],
        'network': NetworkTypeToJSON(value['network']),
    };
}

