/* tslint:disable */
/* eslint-disable */
/**
 * Exchanger Bot API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { NetworkType } from './NetworkType';
import {
    NetworkTypeFromJSON,
    NetworkTypeFromJSONTyped,
    NetworkTypeToJSON,
} from './NetworkType';

/**
 * 
 * @export
 * @interface WithdrawRequest
 */
export interface WithdrawRequest {
    /**
     * 
     * @type {number}
     * @memberof WithdrawRequest
     */
    accountFromId?: number;
    /**
     * 
     * @type {Array<number>}
     * @memberof WithdrawRequest
     */
    accountToIds?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof WithdrawRequest
     */
    asset?: string;
    /**
     * 
     * @type {NetworkType}
     * @memberof WithdrawRequest
     */
    network?: NetworkType;
    /**
     * 
     * @type {number}
     * @memberof WithdrawRequest
     */
    minQuantity?: number;
    /**
     * 
     * @type {number}
     * @memberof WithdrawRequest
     */
    maxQuantity?: number;
}

/**
 * Check if a given object implements the WithdrawRequest interface.
 */
export function instanceOfWithdrawRequest(value: object): boolean {
    return true;
}

export function WithdrawRequestFromJSON(json: any): WithdrawRequest {
    return WithdrawRequestFromJSONTyped(json, false);
}

export function WithdrawRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): WithdrawRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'accountFromId': json['accountFromId'] == null ? undefined : json['accountFromId'],
        'accountToIds': json['accountToIds'] == null ? undefined : json['accountToIds'],
        'asset': json['asset'] == null ? undefined : json['asset'],
        'network': json['network'] == null ? undefined : NetworkTypeFromJSON(json['network']),
        'minQuantity': json['minQuantity'] == null ? undefined : json['minQuantity'],
        'maxQuantity': json['maxQuantity'] == null ? undefined : json['maxQuantity'],
    };
}

export function WithdrawRequestToJSON(value?: WithdrawRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'accountFromId': value['accountFromId'],
        'accountToIds': value['accountToIds'],
        'asset': value['asset'],
        'network': NetworkTypeToJSON(value['network']),
        'minQuantity': value['minQuantity'],
        'maxQuantity': value['maxQuantity'],
    };
}

